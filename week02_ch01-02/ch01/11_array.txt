[배열]
배열: 순서가 있는 요소의 집합이자 여러 개의 항복을 담는 리스트

1. [배열 선언]
    - 두 가지 방법으로 빈 배열 생성

    let arrA = new Array(); // 배열 생성자
    let arrB = []; // 배열 리터럴

    - 배열 리터럴이 문법이 간결하기 때문에 보통 이 방법으로 배열 생성
    
    - 배열을 생성하면서 값도 할당할 경우, 대괄호 안에서 콤마로 값을 구분해 입력

    let food = ['짜장면', '피자', '치킨']

    - 배열의 값으로 어떤 자료형도 사용 가능. 배열은 다른 배열은 물론 객체나 함수 등 모두 저장.

    let arr = [
        1, // 숫자
        "1", // 문자
        true, // 불리언
        null, 
        undefined, 
        () => {}, // 화살표 함수
        function () {}, // 함수
        [1, 2, 3], // 배열
        { a: 1 } // 객체
    ];

    - 자바스크립트의 배열은 다른 언어와 달리 길이가 고정되어 있지 x -> 배열 요소를 추가 또는 삭제함에 따라 길이가 늘거나 줄어듬.



2. [배열 인덱스]
    - 배열과 객체는 둘 다 여러 데이터를 저장할 수 있고, 저장할 데이터의 자료형에 아무런 제약이 없음.
    - 배열과 객체의 한 가지 차이점은 객체는 key가 있지만 배열은 없음.

    - 배열은 데이터의 위치를 key처럼 사용할 수 있는 인덱스가 있음.
    - 배열에서 특정 데이터에 접근하려면 데이터의 위치를 나타내는 인덱스를 객체의 괄호 표기법처럼 사용.

    let food = ["짜장면", "피자", "치킨"];
    console.log(food[0]); // 출력: 짜장면
    console.log(food[1]); // 출력: 피자
    console.log(food[2]); // 츨력: 치킨

    - 인덱스: 배열 요소의 위치를 0부터 시작하는 숫자로 순서대로 표현한 것.

    - 인덱스를 이용하면 배열 요소를 수정 또는 추가 가능

    let food = ["짜장면", "피자", "치킨"];
    food[2] = "파스타"; // 
    food[3] = "레몬"; // 
    console.log(food); // 출력: ["짜장면", "피자", "파스타", "레몬"]
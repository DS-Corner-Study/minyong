[스프레드 연산자오아 rest 매개변수]
- 반복이 가능한 객체에서 값을 개별 요소로 분리하는 스프레드 연산자.
- 개별 요소를 다시 배열로 묶는 rest 매개변수



1. [스프레드 연산자]

스프레드(spread) 연산자는 기호로는 '...'로 표기하는데, 전개 연산자라고도 부름.
스프레드 연산자를 이용하면 배열, 문자열, 객체 등과 같이 반복이 가능한 객체의 값을 개별 요소로 분리할 수 있음.



1-1. [스프레드 연산자와 배열, 객체]

ex1-1: 변수 arrB의 첫 번째 요소에 또 다른 배열 ...arrA를 저장하는 경우.

let arrA = [1, 2, 3];
let arrB = [...arrA, 4, 5, 6];
console.log(arrB); // [1, 2, 3, 4, 5, 6]
- ...arrA처럼 스프레드 연산자 기호가 변수 앞에 붙게 되면, 이 배열은 개별 요소로 분리되어 저장됨.
- 따라서 arrB에는 arrA 요소의 1,2,3이 순서대로 할당되고, 그 뒤로 4,5,6이 할당됨.

ex1-2: 스프레드 연산자…arrA로 저장하지 않고 배열 arrA를 다른 배열에 그냥 저장하는 경우.

- 만약 arrB = [arrA, 4, 5, 6]이라면 arrB에는 [[1, 2, 3], 4, 5, 6]이 저장됨.
- 차이점을 잘 구분해야 함.

ex2-1: 객체를 다룰 때 스프레드 연산자를 이용하는 경우.

let objA = {
  a: 1,
  b: 2
};
let objB = {
  ...objA,
  c: 3,
  d: 4
};
console.log(objB); // {a: 1, b: 2, c: 3, d: 4}
- objA 프로퍼티를 objB의 프로퍼티로 나열함.
- 따라서 objB는 objA의 a와 b 프로퍼티를 개별 요소로 포함함.



1-2. [스프레드 연산자와 함수]

스프레드 연산자는 함수를 호출할 때도 이용함.

ex3-1: 스프레드 연산자로 배열 요소를 분리하여 함수의 인수로 전달하는 경우.

function func(a, b, c) {
  console.log(a, b, c);
}
let arr = [1, 2, 3];
func(...arr); ① // 1 2 3
- ..arr은 변수 arr에 저장된 배열을 개별 요소로 분리함.
- 따라서 인술로 3개의 값 1,2,3을 전달하는 것과 같은 효과를 얻게 됨.
- 그 결과 함수 func의 매개변수 a,b,c에는 순서대로 1,2,3이 저장됨.

<매개변수에서 구조 분해 할당과 스프레드 연산자의 차이>
- 함수의 매개변수로 구조 분해 할당하는 과정은 함수를 호출할 때 전달하는 인수가 1개이고 그 값이 객체인 경우.
- 스프레드 연산자를 이용해 인수를 전달하면 인수가 1개가 아닌 여러 개로 나뉘어 전달됨. 따라서 매개변수 역시 여러 개 선언.



2. [rest 매개변수]

rest 매개변수는 나머지 매개변수라고 하며, 스프레드 연산자처럼 기호 '...'으로 표기.
스프레드 연산자는 배영ㄹ이나 객체처럼 반복 가능한 값을 개별 요소로 분리하지만, rest 매개변수는 반대로 개별 요소를 배열로 묶음.

ex4-1: 인수 4개를 받아 매개변수 배열 1개에 저장하는 경우.

function func(...rest) {
  console.log(rest);
}
func(1, 2, 3, 4); // [1, 2, 3, 4]
- 매개변수로 사용할 변수의 이름 앞에 ...을 붙이면 rest 매개변수가 됨.
- rest 매개변수는 함수에 전달한 인수들을 순차적으로 배열에 저장.
- 따라서 변수 rest에 저장되는 값은 [1,2,3,4]가 됨.

ex4-2: 다른 매개변수와 함께 사용하는 rest의 경우.

function func(param, ...rest) {
  console.log(param);
  console.log(rest);
}
func(1, 2, 3, 4);
// 1
// [2, 3, 4]
- rest 매개변수와 다른 매개변수를 함께 사용하는 경우, 인수는 순차적으로 왼쪽부터 오른쪽으로 할당됨.
- 따라서 param에는 첫 번째 인수 1이, 나머지 인수들은 순차적으로 변수 rest에 배열로 할당됨.

ex4-3: rest 매개변수를 사용할 때 주의해야 하는 경우.

function func(...rest, param) { // 오류 : rest 매개변수는 마지막에 작성해야 합니다.
  console.log(param);
  console.log(rest);
}
func(1, 2, 3, 4);
- rest 매개변수는 먼저 선언한 매개변수에 할당된 인수를 제외하고 나머지를 모두 배열에 저장함.
- 따라서 반드시 매개변수에서 마지막에 선언되어야 함.
[Date 객체와 날짜]
- 자바스크립트에는 시간을 표현하는 Date 객체가 있음.
- Date는 배열이나 함수처럼 특수한 목적을 수행하기 위해 기능이 추가된 객체.
- Date 객체는 날짜와 시간을 저장하며 이와 관련한 유용한 메서드도 함께 제공.

- Date 객체를 활용하면 특정 게시물의 생성 시간을 저장하거나 오늘의 날짜를 출력하거나 타이머를 만드는 등 시간과 관련된 기능을 쉽게 구현할 수 있음.



1. [Date 객체 생성하기]

객체 생성 방법으로 생성자 문법과 리터럴 문법 2가지가 있다고 배웠음.
하지만 Date 객체는 리터럴 문법이 아닌 생성자 문법으로만 만들 수 있음.

Date 객체는 다음과 같이 new 키워드로 생성.

let date = new Date();
console.log(date);
// 현재 날짜 및 시간
- 생성자인 Date()에 아무런 인수도 전달하지 않으면 생성 당시의 시간, 즉 현재의 날짜와 시간이 저장된 Date 객체를 반환.

<생성자란?>
- 자바스크립트의 생성자는 객체를 생성하는 함수.
- Date 객체는 리터럴이 아닌 생성자로 만듦.
- 생성자로 객체를 만들 때 특정 시간 등의 정보를 인수로 전달하면, 객체를 생성함과 동시에 초기화할 수 있음.



2. [Date 객체와 협정 세계시(UTC)]

자바스크립트는 전 세계 프로그래머가 공용으로 사용하는 언어이기 때문에, Date 객체는 특정 지역의 시간대에 맞게 동작하지 않고, 협정 세계시라고 부르는 UTC(Universial Time Coordinated)를 기준으로 동작.



2-1. [협정 세계시]

협정 세계시인 UTC는 국제 표준 시간으로 쓰이는 시각.
협정 세계시는 시간의 시작을 1970년 1월 1일 0시 0분 0초를 기준으로 하며, 이 시작 시각을 UTC+0시라고 표현.

자바스크립트의 Date 객체에는 특정 시간을 ‘타임 스탬프’를 기준으로 저장하고 수정하는 기능이 있음.
타임 스탬프란 특정 시간이 UTC+0시인 1970년 첫날을 기점으로 흘러간 밀리초(ms)의 시간.
따라서 Date 객체를 생성할 때 생성자에 인수로 0을 전달하면, UTC+0시를 기준으로 0밀리초 후의 시간을 Date 객체로 생성해 반환.

ex1-1: 협정 세계시.

let Jan01_1970 = new Date(0);
console.log(Jan01_1970);
// Thu Jan 01 1970 09:00:00 GMT+0900 (한국 표준시)
- 변수 Jan01_1970에 저장된 Date 객체를 출력하면, UTC+0시에 해당하는 1970년 1월 1일 0시 0분 0초를 출력.
- 그런데 출력값을 자세히 살펴보면 1970년 1월 1일 9시 0분 0초로 출력되는 것을 볼 수 있는데, 이는 한국 표준시가 UTC보다 9시간이 빠르기 때문.
- 따라서 한국 표준시 기준으로는 UTC+09:00로 표현.



2-2. [타임스탬프]

타임 스탬프란 특정 시간이 UTC+0시인 1970년 첫날을 기준으로 흘러간 밀리초(ms)의 시간을 의미.

ex2-1:  UTC+0시로부터 하루 뒤인 1970년 1월 2일을 저장하는 Date 객체를 생성하는 경우.

let Jan02_1970 = new Date(24 * 3600 * 1000);
console.log(Jan02_1970);
// Fri Jan 02 1970 09:00:00 GMT+0900 (한국 표준시)
- 


3. [원하는 날짜로 Date 객체 생성하기]
3-1. [문자열로 특정 날짜 전달하기]
3-2. [숫자로 특정 날짜 전달하기]
3-3. [타임 스탬프로 날짜 생성하기]
3-4. [Date 객체에서 날짜 요소 얻기]
3-5. [getFullYear]
3-6. [getMonth]
3-7. [getDate]
3-8. [getDay]
3-9. [getHours, getMinutes, getSeconds, getMilliseconds]

4. [Date 객체의 날짜 요소 수정하기]
4-1. [setFullYear]
4-2. [setMonth]
4-3. [setDate]
4-4. [setHours, setMinutes, setSeconds]

5. [Date 객체 출력하기]
5-1. [toString]
5-2. [toDateString]
5-3. [toLocaleString, toLocaleDateString]

6. [Date 객체 응용하기]
6-1. [n 월씩 이동하기]
6-2. [배열에서 이번 달에 해당하는 날짜만 필터링하기]